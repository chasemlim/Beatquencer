{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/pad.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Pad","[object Object]","soundType","audioCtx","this","audioBuffer","sound","volume","setupSample","then","sample","filepath","res","fetch","arrayBuffer","decodeAudioData","filePath","determineSound","console","log","getFile","sampleSource","createBufferSource","buffer","connect","destination","start","window","addEventListener","AudioContext","webkitAudioContext","pad","play"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,yCClFe,MAAAC,EAGfC,YAAAC,EAAAC,GACAC,KAAAF,YACAE,KAAAD,WACAC,KAAAC,YACAD,KAAAE,MAAA,GACAF,KAAAG,OAAA,EAUAH,KAAAI,cACAC,KAAAC,OAeAT,iBACA,OAAAG,KAAAF,WACA,YAEA,WAEA,WAEA,WAEA,WAEA,YAEA,WAEA,WAEA,UAEA,QACA,mBAIAD,cAAAE,EAAAQ,GACA,MAAAC,QAAAC,MAAAF,GACAG,QAAAF,EAAAE,cACAT,QAAAF,EAAAY,gBAAAD,GAEA,OADAV,KAAAC,cACAA,EAGAJ,oBACA,MAAAe,EAAAZ,KAAAa,iBAIA,OAHAC,QAAAC,IAAAH,SAEAZ,KAAAgB,QAAAhB,KAAAD,SAAAa,GAKAf,KAAAE,EAAAE,GACA,MAAAgB,EAAAlB,EAAAmB,qBAIA,OAHAD,EAAAE,OAAAlB,EACAgB,EAAAG,QAAArB,EAAAsB,aACAJ,EAAAK,QACAL,GC7EAH,QAAAC,IAAA,aAGAQ,OAAAC,iBAAA,wBACAV,QAAAC,IAAA,UACA,MACAhB,EAAA,IADAwB,OAAAE,cAAAF,OAAAG,oBAGAC,EAAA,IAAoB/B,EAAG,GAAAG,GACvBwB,OAAAI,MAEAb,QAAAC,IAAAY,GAEAA,EAAAC,KAAA7B,EAAA4B,EAAA1B","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Pad {\n\n    // Pass in Audio Context from board\n    constructor(soundType, audioCtx) {\n        this.soundType = soundType;\n        this.audioCtx = audioCtx;\n        this.audioBuffer;\n        this.sound = '';\n        this.volume = 0;\n\n        // this.addEventListener('click', () => {\n        //     if (this.getAttribute('aria-checked') === false) {\n        //         this.setAttribute('aria-checked', 'true');\n        //     } else {\n        //         this.setAttribute('aria-checked', 'false');\n        //     }\n        // })\n\n        this.setupSample()\n            .then((sample) => {\n\n                // const playButton = document.querySelector('playpause');\n\n                // if (!playButton.classList.contains('init')) {\n                //     playButton.addEventListener('click', e => {\n                        \n                //     })\n                // }\n\n            })\n\n        // this.sound.connect(audioCtx.destination);\n    }\n\n    determineSound() {\n        switch (this.soundType) {\n            case 'hihat':\n                // this.sound = \n            case 'tom1':\n\n            case 'tom2':\n\n            case 'tom3':\n\n            case 'tom4':\n\n            case 'snare':\n\n            case 'clap':\n\n            case 'kick':\n\n            case 'sub':\n\n            default:\n                return 'drums.wav';\n        }\n    }\n\n    async getFile(audioCtx, filepath) {\n        const res = await fetch(filepath);\n        const arrayBuffer = await res.arrayBuffer();\n        const audioBuffer = await audioCtx.decodeAudioData(arrayBuffer);\n        this.audioBuffer = audioBuffer;\n        return audioBuffer;\n    }\n\n    async setupSample() {\n        const filePath = this.determineSound();\n        console.log(filePath);\n        \n        const sample = await this.getFile(this.audioCtx, filePath);\n        return sample;\n    }\n\n\n    play(audioCtx, audioBuffer) {\n        const sampleSource = audioCtx.createBufferSource();\n        sampleSource.buffer = audioBuffer; // AudioBuffer comes from this.audioBuffer\n        sampleSource.connect(audioCtx.destination);\n        sampleSource.start();\n        return sampleSource;\n    }\n}","// const board = require('./lib/board'); \n\nimport Pad from './lib/pad';\n\nconsole.log(\"something\");\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    console.log(\"loaded\");\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioCtx = new AudioContext();\n\n    const pad = new Pad('', audioCtx);\n    window.pad = pad;\n\n    console.log(pad);\n\n    pad.play(audioCtx, pad.audioBuffer);\n})"],"sourceRoot":""}